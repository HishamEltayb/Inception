# version: '3.1'

services:
  mariadb:
    build: ./requirements/mariadb
    image: mariadb
    container_name: mariadb
    restart: on-failure
    ports: ["3306:3306"]
    env_file: .env
    secrets:
      - DB_PASSWORD
      - DB_ROOT_PASSWORD
    networks: ["inception"]
    volumes: ["~/data/mariadb:/var/lib/mysql"]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  
  nginx:
    build: ./requirements/nginx
    image: nginx
    container_name: nginx
    restart: on-failure
    ports: ["443:443"]
    env_file: .env
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    networks: ["inception"]
    volumes: ["~/data/wordpress:/var/www/html/wordpress"]
    depends_on:
      wordpress:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 10s
      timeout: 5s
      retries: 3

  wordpress:
    build: ./requirements/wordpress
    image: wordpress
    container_name: wordpress
    restart: on-failure
    ports: ["9000:9000"]
    env_file: .env
    secrets:
      - DB_PASSWORD
      - CREDENTIALS
    networks: ["inception"]
    volumes: ["~/data/wordpress:/var/www/html/wordpress"]
    depends_on:
      mariadb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "php-fpm83", "-t"]
      interval: 10s
      timeout: 5s
      retries: 3






#A bridge network creates an internal network within Docker where containers can communicate with each.
networks:
  inception:
    driver: bridge

secrets:
  DB_PASSWORD:
    file: ../secrets/db_password.txt
  DB_ROOT_PASSWORD:
    file: ../secrets/db_root_password.txt
  CREDENTIALS:
    file: ../secrets/credentials.txt

volumes:
  wordpress:
    driver_opts:
      o: bind
      type: none
      device: ~/data/wordpress
  mariadb:
    driver_opts:
      o: bind
      type: none
      device: ~/data/mariadb